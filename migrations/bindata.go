// Code generated by go-bindata.
// sources:
// data/10_add_email_gen_column.down.sql
// data/10_add_email_gen_column.up.sql
// data/11_add_tenants_table.down.sql
// data/11_add_tenants_table.up.sql
// data/12_role_per_tenant.down.sql
// data/12_role_per_tenant.up.sql
// data/13_ip_whitelist.down.sql
// data/13_ip_whitelist.up.sql
// data/14_roles_ref.down.sql
// data/14_roles_ref.up.sql
// data/15_role_membership_ref.down.sql
// data/15_role_membership_ref.up.sql
// data/16_user_id_default.down.sql
// data/16_user_id_default.up.sql
// data/17_service_account_keys.down.sql
// data/17_service_account_keys.up.sql
// data/18_service_constraints.down.sql
// data/18_service_constraints.up.sql
// data/19_update_log_table.down.sql
// data/19_update_log_table.up.sql
// data/1_add_users_table.down.sql
// data/1_add_users_table.up.sql
// data/20_service_accounts_ip_validation.down.sql
// data/20_service_accounts_ip_validation.up.sql
// data/2_add_roles_table.down.sql
// data/2_add_roles_table.up.sql
// data/3_add_log_table.down.sql
// data/3_add_log_table.up.sql
// data/4_not_null.down.sql
// data/4_not_null.up.sql
// data/5_bootstrap.down.sql
// data/5_bootstrap.up.sql
// data/6_add_gen_column.down.sql
// data/6_add_gen_column.up.sql
// data/7_add_ip_column.down.sql
// data/7_add_ip_column.up.sql
// data/8_add_user_addr_columns.down.sql
// data/8_add_user_addr_columns.up.sql
// data/9_add_log_columns.down.sql
// data/9_add_log_columns.up.sql
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __10_add_email_gen_columnDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xcd\x4d\xcc\xcc\x89\x4f\x4f\xcd\xb3\xe6\x02\x04\x00\x00\xff\xff\x15\xfc\x69\x9a\x29\x00\x00\x00")

func _10_add_email_gen_columnDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_add_email_gen_columnDownSql,
		"10_add_email_gen_column.down.sql",
	)
}

func _10_add_email_gen_columnDownSql() (*asset, error) {
	bytes, err := _10_add_email_gen_columnDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_add_email_gen_column.down.sql", size: 41, mode: os.FileMode(420), modTime: time.Unix(1532446858, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __10_add_email_gen_columnUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xcd\x4d\xcc\xcc\x89\x4f\x4f\xcd\x53\xf0\xf4\x0b\x71\x75\x77\x0d\x52\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\x51\x70\x71\x75\x73\x0c\xf5\x09\x51\x30\xb0\xe6\x02\x04\x00\x00\xff\xff\x95\xf3\x7e\x91\x43\x00\x00\x00")

func _10_add_email_gen_columnUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__10_add_email_gen_columnUpSql,
		"10_add_email_gen_column.up.sql",
	)
}

func _10_add_email_gen_columnUpSql() (*asset, error) {
	bytes, err := _10_add_email_gen_columnUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "10_add_email_gen_column.up.sql", size: 67, mode: os.FileMode(420), modTime: time.Unix(1532446858, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __11_add_tenants_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x72\x75\xf7\xf4\xb3\xe6\xe2\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\x4d\xcd\x4d\x4a\x2d\x2a\xce\xc8\x2c\xb0\x46\x16\x2e\x49\xcd\x4b\xcc\x2b\x29\x86\xab\x8d\x0c\x70\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x46\xd2\x14\x5f\x52\x59\x90\xaa\x83\x2c\x50\x5c\x92\x58\x52\x5a\xac\x03\x35\x01\x2c\x6f\xcd\xc5\xe5\xec\xef\xeb\xeb\x19\x62\x0d\x08\x00\x00\xff\xff\xcd\xa6\xc0\x07\x81\x00\x00\x00")

func _11_add_tenants_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__11_add_tenants_tableDownSql,
		"11_add_tenants_table.down.sql",
	)
}

func _11_add_tenants_tableDownSql() (*asset, error) {
	bytes, err := _11_add_tenants_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "11_add_tenants_table.down.sql", size: 129, mode: os.FileMode(420), modTime: time.Unix(1547515824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __11_add_tenants_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xc1\x8e\x9b\x30\x10\x3d\x2f\x5f\x31\xb7\x80\x84\x7a\xea\x6d\xd5\x83\x93\x0c\xad\x5b\xb0\x53\x30\xda\xa6\x97\xc8\x8d\xdd\x5d\x4b\x0b\x44\x60\xa8\xda\xaf\xaf\x9c\x00\x21\xb0\x95\x56\x7b\xe9\x0d\x8f\xe6\xbd\xf1\xbc\xf7\xcc\x1a\x3f\x52\x76\xef\x79\x9b\x14\x89\x40\x10\xfb\x1d\x82\xd5\xa5\x2c\xed\xc1\xfe\x3e\x69\x20\x19\x20\xcb\x13\xf0\x57\xa6\x54\xa6\x33\xaa\x95\xcf\xab\x10\x56\x55\xfd\x28\x4b\xf3\x47\x5a\x53\x95\xab\x60\x42\x40\xd6\xf1\xc0\xd0\xf8\xde\x9d\x51\x90\xe7\x74\x0b\xbb\x94\x26\x24\xdd\xc3\x17\xdc\xc3\x16\x23\x92\xc7\x02\xda\xd6\xa8\xc3\xa3\x2e\x75\x2d\xad\x3e\x74\xef\xfd\x20\xf4\xee\x4a\x59\x68\x10\xf8\x4d\x00\xe3\x02\x58\x1e\xc7\xa1\x77\x27\x95\xd2\x0a\x04\x4d\x30\x13\x24\xd9\xc1\x03\x15\x9f\xce\x47\xf8\xce\x19\x8e\x9d\x23\x33\xe3\x0f\x67\xb2\xa2\x52\xe6\xa7\x79\x13\xf4\x54\x57\x56\x1f\xad\x56\xb0\xe6\x3c\x46\xc2\x96\xad\x11\x89\x33\x74\xb7\xab\x8f\x4f\xa6\x7b\x4d\xe7\x54\xd9\xe9\xf7\x02\x70\xab\xaf\x17\xcc\x1c\x2a\x74\xf1\x43\xd7\xcd\x93\x39\xcd\x5d\xaa\x7e\x95\xba\x76\x06\x5d\x5a\x9c\x35\xff\x00\x36\x56\xda\xb6\x99\x40\xe5\xd1\x9a\x4e\x3b\xac\x29\x3b\x63\xb5\x5a\xfa\x7a\x85\xbf\xc5\xda\xb6\xd1\xf5\x61\x40\xa5\x18\x61\x8a\x6c\x83\x19\xb8\x7a\xe3\x1b\x15\x00\x67\x90\xef\xb6\x6e\xde\x86\x64\x1b\xb2\x45\x57\xd9\x62\x8c\xd7\xca\x55\xc5\x17\x98\x86\xdc\xbd\x9e\xeb\x3f\x24\x6b\x6e\xde\xfc\xbc\x0c\x43\xef\xe5\x2d\xb6\xf7\x6f\x59\x59\xe2\x07\x67\x3d\x00\x80\x9c\xd1\xaf\x39\x82\xdf\xbb\x11\xc2\x28\x67\x70\xce\x19\x65\x19\xa6\x02\x28\x13\x7c\xd0\x13\x7c\xf7\x2a\xc3\x69\x64\x03\xf0\x32\x8c\x71\x23\x40\x17\xd2\x3c\xbb\x18\x5d\x7a\xa6\xff\x09\x90\xcd\x4d\xcc\xa3\x94\x27\x17\xb7\x67\x73\xae\x4b\xbc\x74\xaf\x70\x2e\x51\x30\xcc\x3e\x73\xbd\x33\xca\x0d\x9a\xe1\x86\xf2\x84\xa5\x7f\x1c\x93\x6b\x40\x8c\x91\x80\xcf\x9c\xb2\x71\x55\xce\x7a\xd6\xcb\x5e\x1f\x46\x3a\xb7\x9e\x7b\x0f\x3c\x49\xa8\xb8\xff\x1b\x00\x00\xff\xff\xa4\x10\x8f\xf5\x38\x05\x00\x00")

func _11_add_tenants_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__11_add_tenants_tableUpSql,
		"11_add_tenants_table.up.sql",
	)
}

func _11_add_tenants_tableUpSql() (*asset, error) {
	bytes, err := _11_add_tenants_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "11_add_tenants_table.up.sql", size: 1336, mode: os.FileMode(420), modTime: time.Unix(1547515824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __12_role_per_tenantDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x4d\x6a\xc3\x30\x10\x46\xf7\x73\x8a\x6f\x99\x40\x6f\xa0\x95\x22\x4d\xcb\x10\xfd\x84\xf1\x74\x91\x95\x29\x44\x8b\x40\x9b\x96\xc4\xbd\x7f\x89\x5d\x83\x31\x5e\xea\xf1\x10\xef\x9b\x03\xbf\x49\x71\x44\x3e\x19\x2b\xcc\x1f\x12\xe3\xfe\xfd\xd9\x1e\x88\x5a\x4f\x08\x35\xbd\xe7\x82\xa1\xdd\x3e\x6e\x43\x7f\xbd\x38\xa2\xa0\xec\x8d\x97\x6a\x3f\xb4\xaf\x1f\xec\x92\x1c\xff\xc1\xde\x11\x49\xe9\x58\x0d\x52\xac\x2e\xac\xdd\xef\xa3\xdd\xfb\xeb\xe5\x65\x64\x7b\xea\x38\x71\x30\x10\x00\x44\xe9\x4c\x4a\x30\xd4\x82\x95\x87\xf9\x39\x8a\x4f\x44\xaf\x5a\xf3\xf4\xb1\x23\x1a\x5b\x17\x45\x5b\x83\xa6\x4a\x52\x2e\x3e\x33\xe6\x2a\x87\xad\xed\x3e\x46\x9c\x54\xb2\xd7\x33\x8e\x7c\x5e\xe7\x3c\xaf\x50\x73\x16\x73\x7f\x01\x00\x00\xff\xff\xf0\xd1\x32\x15\x3f\x01\x00\x00")

func _12_role_per_tenantDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__12_role_per_tenantDownSql,
		"12_role_per_tenant.down.sql",
	)
}

func _12_role_per_tenantDownSql() (*asset, error) {
	bytes, err := _12_role_per_tenantDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "12_role_per_tenant.down.sql", size: 319, mode: os.FileMode(420), modTime: time.Unix(1547515824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __12_role_per_tenantUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xbd\x6e\xc3\x20\x14\x85\x77\x3f\xc5\x19\x1d\x29\xf2\x0b\x58\x19\x08\x5c\xb7\xb4\xfc\x58\x80\x55\x65\xb2\x2c\x99\x01\x35\x71\xab\x90\x0e\x7d\xfb\xca\x8e\x93\x76\x68\x36\xf8\x38\xdc\x4f\xe7\xee\xe9\x49\x9a\xba\x28\x98\x0a\xe4\x10\xd8\x5e\x11\xce\x1f\xc7\x98\xc1\x84\x00\xb7\xaa\xd3\x06\x97\x38\x0d\xd3\xa5\x4f\x23\xba\x4e\x0a\x38\x6a\xc8\x91\xe1\xe4\xd7\x97\x5c\xa6\x71\x03\x6b\xd0\xb5\x82\x05\x02\x67\x9e\x33\x41\x33\x11\xa4\xe8\x97\xd4\x45\xb1\x46\xae\x0e\x4f\xe1\xcf\xf0\x1d\x4a\x4f\x8a\xf8\x8d\xe5\x2a\x8d\x68\x9c\xd5\xb7\x3b\x14\x35\x01\x2f\x56\x1a\x7c\xe5\x78\xce\xb3\x60\x39\x54\xf1\x34\xa4\x23\x76\xf7\x8f\xd3\x70\x8a\x78\x7b\x26\x47\x6b\x60\x19\xbf\x48\xab\x19\xf4\x69\xdc\xfc\xdb\x5a\x38\xdb\x82\x5b\xe3\x83\x63\xd2\x84\x2b\xed\x3f\xdf\xe3\x77\xfd\x60\x47\xad\x93\x9a\xb9\x03\x5e\xe9\x80\xf2\x5e\x66\x8b\x55\xb3\x5d\xa2\xb3\x8c\x5b\xad\x65\xa8\x7f\x02\x00\x00\xff\xff\xf7\x30\x63\x46\x72\x01\x00\x00")

func _12_role_per_tenantUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__12_role_per_tenantUpSql,
		"12_role_per_tenant.up.sql",
	)
}

func _12_role_per_tenantUpSql() (*asset, error) {
	bytes, err := _12_role_per_tenantUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "12_role_per_tenant.up.sql", size: 370, mode: os.FileMode(420), modTime: time.Unix(1547515824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __13_ip_whitelistDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x72\x75\xf7\xf4\xb3\xe6\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\x4c\x4e\xce\x2f\xcd\x2b\x89\x2f\xa9\x2c\x48\xb5\xe6\x02\xcb\x40\x94\x16\xa7\x16\x95\x65\x26\xa7\xc6\xc3\x14\x64\x16\x58\x73\x39\xfb\xfb\xfa\x7a\x86\x58\x73\x01\x02\x00\x00\xff\xff\xb9\xf2\x03\x27\x5a\x00\x00\x00")

func _13_ip_whitelistDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__13_ip_whitelistDownSql,
		"13_ip_whitelist.down.sql",
	)
}

func _13_ip_whitelistDownSql() (*asset, error) {
	bytes, err := _13_ip_whitelistDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "13_ip_whitelist.down.sql", size: 90, mode: os.FileMode(420), modTime: time.Unix(1552434309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __13_ip_whitelistUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xcd\x4a\xc3\x40\x14\x85\xd7\x9d\xa7\x38\xbb\xa4\x90\x37\xe8\x6a\x3a\x73\xab\x03\xf3\x13\x93\x19\x8a\x6e\x42\xc8\x8c\x32\xa0\xb6\x24\x8d\xe0\xdb\x4b\xaa\x55\x8b\x2b\x97\xf7\xc0\xf9\xce\xc7\xdd\xd2\x8d\xb2\x1b\xc6\x44\x43\xdc\x13\xfc\x7d\x4d\xe8\x87\xe1\x30\xbf\x9e\xba\xd3\xfb\x31\x81\xb7\x20\x1b\x0c\xca\x62\x4c\x4f\xf3\x73\x3f\x16\x15\x8a\x29\x8d\x6f\x79\x48\xc5\x7a\xc3\x18\xd7\x9e\x1a\x78\xbe\xd5\x84\x79\x4a\xe3\x04\x2e\x25\x84\xd3\xc1\xd8\x6b\xd4\xd5\x61\x9d\x87\x0d\x5a\x43\xd2\x8e\x07\xed\xf1\xcd\xff\x65\x73\x86\x7e\x8d\x75\x97\x7a\x3e\x96\x0c\x00\xfa\x18\x47\x28\x4b\x1e\xc1\xaa\xbb\x40\x15\x5b\x2d\xfb\x5d\x8e\x08\x41\x49\x34\xb4\xa3\x86\xac\xa0\xf6\xd3\xab\xcc\x71\x0d\x67\x11\x6a\xb9\xc0\x05\x6f\x05\x97\xb4\x24\x92\x34\xfd\x24\xd5\x85\x9e\x22\xbc\x32\xd4\x7a\x6e\x6a\xec\x95\xbf\x3d\x9f\x78\x70\x96\xfe\xea\x5b\xb7\x2f\xd7\x15\x5b\xbd\x1c\x62\x7e\xcc\xff\xaf\xb2\xe5\x97\xc2\x19\xa3\xfc\x86\x7d\x04\x00\x00\xff\xff\x87\x89\x73\x72\x96\x01\x00\x00")

func _13_ip_whitelistUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__13_ip_whitelistUpSql,
		"13_ip_whitelist.up.sql",
	)
}

func _13_ip_whitelistUpSql() (*asset, error) {
	bytes, err := _13_ip_whitelistUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "13_ip_whitelist.up.sql", size: 406, mode: os.FileMode(420), modTime: time.Unix(1552434309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __14_roles_refDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\xca\xcf\x49\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x88\xc6\x97\x16\xa7\x16\xc5\x67\xa6\xc4\xa7\x65\xa7\x56\x5a\x73\x01\x02\x00\x00\xff\xff\x75\x0e\xcd\x18\x36\x00\x00\x00")

func _14_roles_refDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__14_roles_refDownSql,
		"14_roles_ref.down.sql",
	)
}

func _14_roles_refDownSql() (*asset, error) {
	bytes, err := _14_roles_refDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "14_roles_ref.down.sql", size: 54, mode: os.FileMode(420), modTime: time.Unix(1552434309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __14_roles_refUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xc9\x31\x0a\x02\x31\x10\x05\xd0\x7e\x4f\xf1\xcb\xf5\x0c\x56\x63\xf2\x57\x16\x97\x89\x4c\xc6\xc2\x2a\x8d\x11\x44\x41\xd8\x60\xe1\xed\x25\x28\xd8\xbe\x27\x8b\xd3\xe0\xb2\x5b\x88\xf5\xf9\xa8\x6d\x00\x00\x89\x11\x21\x69\x76\x93\x59\xfd\x1b\xe5\xd5\xea\x5a\x6e\x97\x72\xbd\xd7\x37\xa6\x64\x9c\xf7\x8a\x03\xcf\x18\x7f\xb3\x81\x71\xa2\x51\x03\x33\xba\xb5\xb1\x63\x52\x44\x2e\x74\x22\x48\x0e\x12\xd9\xe5\x74\x8c\xf2\x97\xed\xf0\x09\x00\x00\xff\xff\x4f\x06\x81\xe4\x88\x00\x00\x00")

func _14_roles_refUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__14_roles_refUpSql,
		"14_roles_ref.up.sql",
	)
}

func _14_roles_refUpSql() (*asset, error) {
	bytes, err := _14_roles_refUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "14_roles_ref.up.sql", size: 136, mode: os.FileMode(420), modTime: time.Unix(1552434309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __15_role_membership_refDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcc\x41\x0a\xc2\x30\x10\x46\xe1\x7d\x4f\xf1\x2f\x15\xbc\x81\xab\x31\x33\x82\x10\x9b\x92\x26\xeb\xa2\x64\xc0\x80\xad\x92\xd4\xfb\x8b\x8a\x08\xe2\xc6\xed\x7b\xf0\x91\x0d\xe2\x11\x68\x63\x05\xe5\x72\xd6\xda\x00\x00\x31\xc3\x38\x1b\xf7\x2d\x6e\x55\xcb\x90\x13\x62\xdc\x31\xbc\x6c\xc5\x4b\x6b\xa4\x7f\xf6\xba\xc8\x69\x09\xd7\x22\x76\x4c\x41\x60\xa8\x37\xc4\xf2\x28\x2c\x56\x3e\x65\xf5\xad\xce\x3a\x1d\xa6\xf9\x97\xfb\x3a\x7f\xca\xec\x5d\xf7\xa6\x47\x1d\x8f\x5a\xea\x29\x5f\x87\x9c\xd6\xcd\x3d\x00\x00\xff\xff\xce\x10\x1c\xcd\xe1\x00\x00\x00")

func _15_role_membership_refDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__15_role_membership_refDownSql,
		"15_role_membership_ref.down.sql",
	)
}

func _15_role_membership_refDownSql() (*asset, error) {
	bytes, err := _15_role_membership_refDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "15_role_membership_ref.down.sql", size: 225, mode: os.FileMode(420), modTime: time.Unix(1552434309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __15_role_membership_refUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x4e\xc3\x30\x10\x44\xef\xfe\x8a\x3d\xb6\x52\xd5\x1f\x88\x38\xb8\xf6\xa6\x58\x24\xeb\xe2\xac\x85\x38\x45\xa0\x1a\x11\x41\x0b\x4a\xca\x81\xbf\x47\x71\xdc\x2a\x4d\x38\xf4\xe8\x37\xb3\xe3\xd9\xdd\xe0\xd6\x50\x26\x84\x2c\x18\x1d\xb0\xdc\x14\x08\xed\xd7\x67\xe8\x40\x6a\x0d\xca\x16\xbe\x24\x38\x84\xc3\x6b\x68\xbb\xf7\xe6\xbb\x6e\xf6\xe0\xbd\xd1\x99\x10\x7e\xa7\x25\x27\xb3\x00\x00\xa8\x90\x27\xce\xbb\xd1\x7b\xdd\xec\xa3\x2b\x77\xb6\x1c\xe1\xc8\x9e\xee\xd1\xa5\xa4\xf5\x4f\x17\xda\xd9\xec\x19\x4a\xd2\xc9\x76\x0a\xc7\x97\xe3\x69\x66\xbc\xe0\xff\x56\x8a\x7f\x69\x67\x77\xe7\xbd\x52\xec\x6a\x26\x5c\x62\x06\x69\x38\x05\x55\xec\xa4\x21\x1e\xc2\xea\xab\x55\xeb\xb7\x8f\xf0\x0b\xb9\x75\x68\xb6\x04\x0f\xf8\x0c\x8b\x2b\x7d\x09\x0e\x73\x74\x48\x0a\xab\x51\xdf\x45\xaf\x58\x02\x8d\x05\x32\x82\x92\x95\x92\x1a\x7b\x92\xae\x9b\xc8\xcd\x35\x7a\x56\xf7\x55\x3c\x99\x47\x8f\x93\x16\xab\x38\xb3\xcc\x84\x50\xb6\x2c\x0d\x67\xe2\x2f\x00\x00\xff\xff\x88\x2d\x38\x7e\xff\x01\x00\x00")

func _15_role_membership_refUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__15_role_membership_refUpSql,
		"15_role_membership_ref.up.sql",
	)
}

func _15_role_membership_refUpSql() (*asset, error) {
	bytes, err := _15_role_membership_refUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "15_role_membership_ref.up.sql", size: 511, mode: os.FileMode(420), modTime: time.Unix(1552434309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __16_user_id_defaultDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x80\x88\x38\xfb\xfb\x84\xfa\xfa\x29\x64\xa6\x28\xb8\x04\xf9\x07\x28\xb8\xb8\xba\x39\x86\xfa\x84\x58\x73\x01\x02\x00\x00\xff\xff\xa9\xc0\x97\xbc\x30\x00\x00\x00")

func _16_user_id_defaultDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__16_user_id_defaultDownSql,
		"16_user_id_default.down.sql",
	)
}

func _16_user_id_defaultDownSql() (*asset, error) {
	bytes, err := _16_user_id_defaultDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "16_user_id_default.down.sql", size: 48, mode: os.FileMode(420), modTime: time.Unix(1552434309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __16_user_id_defaultUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x80\x88\x38\xfb\xfb\x84\xfa\xfa\x29\x64\xa6\x28\x04\xbb\x86\x28\xb8\xb8\xba\x39\x86\xfa\x84\x28\x94\x96\x66\xa6\xc4\xa7\xa7\xe6\xa5\x16\x25\x96\xa4\xc6\x97\x99\x68\x68\x5a\x73\x01\x02\x00\x00\xff\xff\xe5\x69\x10\x4f\x42\x00\x00\x00")

func _16_user_id_defaultUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__16_user_id_defaultUpSql,
		"16_user_id_default.up.sql",
	)
}

func _16_user_id_defaultUpSql() (*asset, error) {
	bytes, err := _16_user_id_defaultUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "16_user_id_default.up.sql", size: 66, mode: os.FileMode(420), modTime: time.Unix(1552434309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __17_service_account_keysDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x72\x75\xf7\xf4\xb3\xe6\xe2\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x4e\x2d\x2a\xcb\x4c\x4e\x8d\x4f\x4c\x4e\xce\x2f\xcd\x2b\x89\xcf\x4e\xad\x2c\xb6\x86\x28\xf0\xf4\x73\x71\x8d\x50\x28\x2d\x4e\x2d\x2a\x8e\x4f\xcd\x4d\xcc\xcc\x01\x49\x5a\x73\x39\xfa\x84\xb8\x06\x41\x75\x83\x25\x15\x1c\x5d\x5c\x14\x9c\xfd\xfd\x82\x43\x82\x1c\x3d\xfd\x42\xd0\x75\x28\x84\xfa\x79\x06\x86\xba\x2a\x68\x80\x45\x34\xad\xb9\xb8\x9c\xfd\x7d\x7d\x3d\x43\xac\xb9\x00\x01\x00\x00\xff\xff\xf2\x27\xb4\x09\x8f\x00\x00\x00")

func _17_service_account_keysDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__17_service_account_keysDownSql,
		"17_service_account_keys.down.sql",
	)
}

func _17_service_account_keysDownSql() (*asset, error) {
	bytes, err := _17_service_account_keysDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "17_service_account_keys.down.sql", size: 143, mode: os.FileMode(420), modTime: time.Unix(1552434309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __17_service_account_keysUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\xc1\x6e\xf2\x30\x10\x84\xef\x7e\x8a\xb9\x91\x48\xff\xf1\xbf\x45\x3d\x98\x78\x29\x56\x13\x3b\x75\x6c\x51\x7a\x89\x52\xb2\xa2\x51\x81\xa2\x84\x20\xf1\xf6\x55\x42\x11\x55\x7b\xf4\xa7\xf1\xec\xec\xec\x9c\x1e\xb5\x49\x84\x48\x1d\x49\x4f\xf0\x72\x9e\x11\x7a\xee\xce\xed\x86\xab\x7a\xb3\xf9\x1c\x0e\xa7\xea\x83\x2f\x7d\x24\x00\xa0\x6d\x10\x82\x56\x30\xd6\xc3\x84\x2c\x43\xe1\x74\x2e\xdd\x1a\x4f\xb4\x86\xa2\x85\x0c\x99\xc7\x30\xb4\x4d\xb5\xe5\x03\x77\xf5\x89\xab\xf3\xff\x28\xfe\x37\x7d\xde\xf3\xfe\x8d\xbb\xfe\xbd\x3d\x56\x7f\x7c\x1c\x2d\xc8\x91\x49\xa9\xfc\x21\x8b\xda\x26\x86\x35\x50\x94\x91\x27\xa4\xb2\x4c\xa5\xa2\x91\x84\x42\xc9\x3b\xb9\xda\xd7\x4d\xc3\x0d\xbc\xce\xa9\xf4\x32\x2f\xb0\xd2\x7e\x39\x3d\xf1\x6a\x0d\xdd\x47\xdd\x62\x1a\xbb\x8a\x62\x11\x27\x42\xc8\xcc\x93\xfb\xde\x7d\xe8\xb9\xeb\xa1\x9c\x2d\x90\x5a\x53\x7a\x27\xb5\xf1\x57\x5a\xf1\xbe\x6e\x77\x63\x1b\xc9\xad\xaf\x60\xf4\x73\x20\x68\xa3\xe8\xe5\xb7\x68\xcc\x39\xa1\x68\x42\x31\x56\x4b\x72\x84\x5b\xa9\xa7\xcb\x91\xf1\x80\x59\xc7\xdb\x61\x57\x77\xb3\xf1\x08\x36\xcf\xb5\x4f\xc4\x57\x00\x00\x00\xff\xff\xa8\x45\x58\xee\x95\x01\x00\x00")

func _17_service_account_keysUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__17_service_account_keysUpSql,
		"17_service_account_keys.up.sql",
	)
}

func _17_service_account_keysUpSql() (*asset, error) {
	bytes, err := _17_service_account_keysUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "17_service_account_keys.up.sql", size: 405, mode: os.FileMode(420), modTime: time.Unix(1552434309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __18_service_constraintsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x81\x88\xc6\x17\xa7\x16\x95\x65\x26\xa7\xc6\xe7\xe5\xc7\xa7\xe6\x26\x66\xe6\xc4\x17\x94\xa7\x58\x73\x01\x02\x00\x00\xff\xff\x51\x7e\xf4\xba\x3e\x00\x00\x00")

func _18_service_constraintsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__18_service_constraintsDownSql,
		"18_service_constraints.down.sql",
	)
}

func _18_service_constraintsDownSql() (*asset, error) {
	bytes, err := _18_service_constraintsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "18_service_constraints.down.sql", size: 62, mode: os.FileMode(420), modTime: time.Unix(1552434309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __18_service_constraintsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xca\x41\xaa\x83\x30\x10\x06\xe0\xfd\x3b\xc5\xbf\x53\xcf\xf0\xe8\x22\xd5\x40\x4b\x25\x42\x9a\xfd\x10\xe2\x50\x05\x6b\x42\xc6\x54\x7a\xfb\x52\xbb\xfd\xf8\x54\xef\xb4\x85\x53\xe7\x5e\xa3\x08\x67\x81\xea\x3a\xb4\x83\xb9\x3b\xab\xae\xc6\xfd\x90\x84\xf3\x6b\x0e\x4c\x6b\x24\x7e\xfa\x79\xa1\xb4\x8f\x68\x2f\xba\xbd\xa1\xf6\x21\xc4\xb2\x6e\xb4\xbd\x13\xe3\x84\x2a\xf3\xa3\x2c\x3e\x57\x18\x2c\xea\x63\x7f\xb5\x82\x32\x1d\x92\x17\xd9\x63\x1e\x69\xf2\x32\x1d\xdc\x34\xff\x7f\x9f\x00\x00\x00\xff\xff\xc6\x38\xc2\x4a\x85\x00\x00\x00")

func _18_service_constraintsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__18_service_constraintsUpSql,
		"18_service_constraints.up.sql",
	)
}

func _18_service_constraintsUpSql() (*asset, error) {
	bytes, err := _18_service_constraintsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "18_service_constraints.up.sql", size: 133, mode: os.FileMode(420), modTime: time.Unix(1552434309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __19_update_log_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x72\x75\xf7\xf4\xb3\xe6\xe2\x72\x09\xf2\x0f\x50\x08\x89\x0c\x70\x55\xf0\x74\x53\x70\x8d\xf0\x0c\x0e\x09\x56\xc8\xc9\x4f\x8f\xcf\x4c\x89\x2f\xa9\x2c\x48\xb5\xe6\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x05\xc9\x28\x80\x75\x38\xfb\xfb\x84\xfa\xfa\x29\x14\xe7\x97\x16\x25\xa7\x42\x55\xe2\x53\x58\x92\x58\x94\x9e\x5a\x82\x43\x61\x90\xab\x9f\xa3\xaf\x2b\x9a\x99\x99\x29\x0a\x21\xfe\x0a\xa5\xc5\xa9\x45\xf1\x99\x29\xd6\x5c\x5c\xce\xfe\xbe\xbe\x9e\x21\xd6\x80\x00\x00\x00\xff\xff\x6d\x36\xc3\x5b\xb8\x00\x00\x00")

func _19_update_log_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__19_update_log_tableDownSql,
		"19_update_log_table.down.sql",
	)
}

func _19_update_log_tableDownSql() (*asset, error) {
	bytes, err := _19_update_log_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "19_update_log_table.down.sql", size: 184, mode: os.FileMode(420), modTime: time.Unix(1552434309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __19_update_log_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd0\xbd\xaa\x83\x40\x10\x05\xe0\xde\xa7\x98\x6e\xef\x85\xfb\x06\x56\xab\xce\x0d\xc2\xfe\x04\x33\x5b\xa4\x12\x13\x07\xb3\x10\x7f\x58\xd7\x22\x6f\x1f\x8c\x08\xa9\xd2\xa4\x9b\x62\xf8\xce\xe1\x64\x78\x28\x4d\x9a\x24\x79\x85\x92\x10\xe8\x7c\x44\xb8\x8f\x5d\xed\xdb\x3a\x3e\x26\x06\x79\x02\x34\x4e\xc3\x8f\x58\x66\x0e\xe2\x0f\x44\xe4\xa1\x19\xe2\x7a\xf5\xdc\x5f\x38\xcc\x37\x3f\x89\xdf\x34\x91\x8a\xb0\x02\x92\x99\x7a\x09\x20\x8b\x02\x72\xab\x9c\x36\x30\x8f\x4b\xb8\xf2\x06\xbe\xe3\xc6\x12\x18\xa7\x14\x14\xf8\x2f\x9d\x22\xd8\x42\x3e\x5a\xb1\x09\x1d\xc7\x2f\xac\x0a\x8d\xd4\xb8\x73\xeb\x53\xed\x5b\x20\xbb\xb7\xf4\xed\x3a\x87\xd5\xba\xa4\xf4\x19\x00\x00\xff\xff\x12\x83\xc9\x9d\x1e\x01\x00\x00")

func _19_update_log_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__19_update_log_tableUpSql,
		"19_update_log_table.up.sql",
	)
}

func _19_update_log_tableUpSql() (*asset, error) {
	bytes, err := _19_update_log_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "19_update_log_table.up.sql", size: 286, mode: os.FileMode(420), modTime: time.Unix(1552434309, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_add_users_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\xb6\xe6\x02\x04\x00\x00\xff\xff\xcf\x0c\x8a\x87\x12\x00\x00\x00")

func _1_add_users_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_add_users_tableDownSql,
		"1_add_users_table.down.sql",
	)
}

func _1_add_users_tableDownSql() (*asset, error) {
	bytes, err := _1_add_users_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_add_users_table.down.sql", size: 18, mode: os.FileMode(420), modTime: time.Unix(1529430051, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __1_add_users_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\x41\x4b\xc4\x30\x10\x85\xcf\xc9\xaf\x98\x63\x0b\x39\xa8\x78\xf3\x34\xbb\x3b\xcb\x06\xd3\x64\xcd\x4e\x5c\xeb\xa5\x04\x12\x69\xc0\x5a\x69\x50\xff\xbe\x58\x41\x0f\xde\x3c\xbe\xc7\xf7\x3e\x78\x5b\x4f\xc8\x04\x8c\x1b\x43\xf0\x56\xf3\x52\x1b\x29\x4a\x82\x10\xf4\x0e\x8e\x5e\x77\xe8\x7b\xb8\xa5\x5e\x49\x91\xa7\x58\x9e\xe1\x1e\xfd\xf6\x80\xbe\xb9\xbc\xb8\xba\x6e\xc1\x3a\x06\x1b\x8c\x81\x60\xf5\x5d\x20\x25\xc5\x6b\xac\xf5\x63\x5e\xd2\x30\xc6\x3a\x02\xd3\x03\xff\x40\x4a\x8a\x97\x38\xe5\xb5\x54\x52\xc4\x94\x72\x02\xd6\x1d\x9d\x18\xbb\x23\x9c\x35\x1f\xd6\x08\x8f\xce\xd2\xaf\x7a\x47\x7b\x0c\xe6\x4b\x73\x6e\x5a\x25\xc5\x34\xa7\xf2\x54\xfe\x35\x5d\x2f\x0c\xef\x79\xf9\x16\x6c\x9c\x33\x84\xf6\x2f\xbf\x47\x73\x22\xd9\xde\x7c\x06\x00\x00\xff\xff\x1d\x0c\xf1\xf7\x1e\x01\x00\x00")

func _1_add_users_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1_add_users_tableUpSql,
		"1_add_users_table.up.sql",
	)
}

func _1_add_users_tableUpSql() (*asset, error) {
	bytes, err := _1_add_users_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1_add_users_table.up.sql", size: 286, mode: os.FileMode(420), modTime: time.Unix(1529430051, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20_service_accounts_ip_validationDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x70\x0b\xf5\x73\x0e\xf1\xf4\xf7\x53\xc8\x2c\x88\xcf\x2f\x4b\x2d\xca\x49\x2c\x88\x4f\xce\x48\x4d\xce\x56\x70\x76\x0c\x76\x76\x74\x71\xb5\x56\xe0\x02\x04\x00\x00\xff\xff\xbb\xf9\x1f\x69\x29\x00\x00\x00")

func _20_service_accounts_ip_validationDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__20_service_accounts_ip_validationDownSql,
		"20_service_accounts_ip_validation.down.sql",
	)
}

func _20_service_accounts_ip_validationDownSql() (*asset, error) {
	bytes, err := _20_service_accounts_ip_validationDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20_service_accounts_ip_validation.down.sql", size: 41, mode: os.FileMode(420), modTime: time.Unix(1554735689, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __20_service_accounts_ip_validationUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x52\xd1\x8e\x9b\x30\x10\x7c\xcf\x57\xcc\x43\xee\x68\xa5\xa8\x3f\x80\xfa\x40\xcd\x42\x2c\x25\x76\xb4\x18\xe5\xde\x10\xe2\x5c\x62\x05\x01\x05\x37\xd7\xfb\xfb\xca\xe4\x94\x54\x6a\x6e\x9f\x96\x65\xc7\x33\xe3\xf1\x0f\xca\xa5\x8a\x57\x2b\xc1\x94\x18\x42\x56\x2a\x61\xa4\x56\x70\x63\x35\x5c\xec\xd4\xd5\x63\xd5\x9c\x6c\x73\xfe\xf2\x15\x4c\xa6\x64\x55\xc0\x4f\xae\x6d\xed\x84\xa4\xc0\x7a\xbd\x02\x80\x94\xc4\x2e\x61\x5a\xfa\x50\x6e\x84\xeb\xad\x8f\x97\xc1\xc2\x70\xfb\x55\xd0\x8e\x84\xc1\x6c\xa7\x8b\x6b\x6c\x55\x37\xcd\xf0\xbb\xf7\x95\x1b\xbf\xd5\xaf\xaf\x13\xa4\x32\x3a\xc0\x33\xd6\xfb\x07\x4b\x38\x6e\x89\xe9\x53\xf4\xf3\x33\x14\x1d\x97\x3e\xbe\x31\xca\x0c\x99\x2e\x55\x0a\xb3\xa5\xbb\x8e\x50\x9c\xc8\x82\x40\x2f\x82\x0e\x8b\xe7\xe8\x09\xcd\xd0\xff\xec\x5c\xe3\x67\xbc\x39\x7f\x82\xfd\xe3\x66\xef\xfa\x16\xbd\xf5\x6f\xc3\x74\xc6\x30\xe1\x34\xcc\x1e\x81\xc2\xce\x33\x9e\xa2\xcd\x8d\x72\x13\x84\x97\x85\x54\x39\x88\x59\xe8\x94\xf0\x1d\x91\xeb\xbd\x6d\x27\xe7\xdf\xab\x66\xe8\x67\x3f\xd5\xae\xf7\xd5\xc5\x0d\x5d\xed\xdd\xd0\x47\x1b\x08\xad\x0a\xc3\x89\x54\x26\xac\xff\x6f\xad\x0a\x67\x57\x67\xfb\x1e\xdd\x3d\x91\x4a\x21\xb3\xfb\xf7\x35\x9a\xa0\xe4\x3a\x23\x95\xc6\xab\xf5\x1a\xbb\x44\xe5\x65\x92\x13\xc6\x6e\x6c\xe7\x5f\xdd\x3d\x68\xc3\x32\xcf\x89\xff\xcd\xf9\x23\xd7\x8f\xd0\x32\xcd\x04\xa9\x0a\x62\x03\xcd\x28\x0f\x69\x80\x69\xf5\xe0\xf2\x17\x44\xa6\x19\x94\x88\x2d\x58\x1f\xaf\x1a\x5e\x48\x94\x86\x70\x60\x2d\x28\x2d\x99\x1e\xbc\xa9\xa0\x47\xef\xf7\xd2\xc4\xab\xbf\x01\x00\x00\xff\xff\x82\x4d\xad\x3c\x89\x02\x00\x00")

func _20_service_accounts_ip_validationUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__20_service_accounts_ip_validationUpSql,
		"20_service_accounts_ip_validation.up.sql",
	)
}

func _20_service_accounts_ip_validationUpSql() (*asset, error) {
	bytes, err := _20_service_accounts_ip_validationUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "20_service_accounts_ip_validation.up.sql", size: 649, mode: os.FileMode(420), modTime: time.Unix(1554739932, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_add_roles_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x28\xca\xcf\x49\x2d\xb6\x06\x04\x00\x00\xff\xff\xf9\xdd\xb1\x51\x11\x00\x00\x00")

func _2_add_roles_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_add_roles_tableDownSql,
		"2_add_roles_table.down.sql",
	)
}

func _2_add_roles_tableDownSql() (*asset, error) {
	bytes, err := _2_add_roles_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_add_roles_table.down.sql", size: 17, mode: os.FileMode(420), modTime: time.Unix(1529430051, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2_add_roles_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\x08\x71\x74\xf2\x71\x55\x28\xca\xcf\x49\x2d\xd6\xe0\xe2\x2c\x2d\x4e\x2d\x8a\xcf\x4c\x51\x08\x0d\xf5\x74\xd1\xe1\xe2\x04\x09\x2b\x84\x39\x06\x39\x7b\x38\x06\x69\x18\x1a\x18\x99\x68\xea\x70\x71\x06\x04\x79\xfa\x3a\x06\x45\x2a\x78\xbb\x46\x2a\x68\x40\x35\xe8\x80\x4d\xd0\xe4\xd2\xb4\x06\x04\x00\x00\xff\xff\xf5\x68\xf3\xff\x57\x00\x00\x00")

func _2_add_roles_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2_add_roles_tableUpSql,
		"2_add_roles_table.up.sql",
	)
}

func _2_add_roles_tableUpSql() (*asset, error) {
	bytes, err := _2_add_roles_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2_add_roles_table.up.sql", size: 87, mode: os.FileMode(420), modTime: time.Unix(1529430051, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_add_log_tableDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\xc8\xc9\x4f\xb7\x06\x04\x00\x00\xff\xff\x5e\x0c\xb6\xd7\x0f\x00\x00\x00")

func _3_add_log_tableDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_add_log_tableDownSql,
		"3_add_log_table.down.sql",
	)
}

func _3_add_log_tableDownSql() (*asset, error) {
	bytes, err := _3_add_log_tableDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_add_log_table.down.sql", size: 15, mode: os.FileMode(420), modTime: time.Unix(1529430051, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __3_add_log_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xc8\xb1\x0a\xc2\x30\x10\x06\xe0\xb9\x79\x8a\x7f\x6c\xa1\xa3\xb8\x38\x9d\xed\x49\x23\x69\x22\xe9\xc5\x82\x8b\x04\x1a\x8a\x20\x0a\x6d\xf4\xf9\x45\x27\xc7\xef\x6b\x3c\x93\x30\x84\xf6\x86\x71\x7f\xce\xa5\x2a\xf2\x0a\xd1\x3d\x0f\x42\xfd\x09\xa3\x96\xee\x47\x5c\x9c\x65\x58\x27\xb0\xc1\x18\xb4\x7c\xa0\x60\x04\xd6\x8d\x65\x55\xab\x22\xbd\xd3\x23\xe3\x4c\xbe\xe9\xc8\x97\xdb\xcd\xf7\x5e\x6b\x5a\xae\xb7\x09\x21\xe8\xb6\x56\x45\x8e\xcb\x9c\xf2\x5f\x4c\x31\x47\x1c\x07\x67\x55\xb5\xfb\x04\x00\x00\xff\xff\x68\xb3\x50\x13\x88\x00\x00\x00")

func _3_add_log_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__3_add_log_tableUpSql,
		"3_add_log_table.up.sql",
	)
}

func _3_add_log_tableUpSql() (*asset, error) {
	bytes, err := _3_add_log_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "3_add_log_table.up.sql", size: 136, mode: os.FileMode(420), modTime: time.Unix(1529430051, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_not_nullDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x80\x88\x38\xfb\xfb\x84\xfa\xfa\x29\xe4\x25\xe6\xa6\x2a\xb8\x04\xf9\x07\x28\xf8\xf9\x87\x28\xf8\x85\xfa\xf8\x58\x03\x02\x00\x00\xff\xff\xb2\xa0\xe0\x10\x32\x00\x00\x00")

func _4_not_nullDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_not_nullDownSql,
		"4_not_null.down.sql",
	)
}

func _4_not_nullDownSql() (*asset, error) {
	bytes, err := _4_not_nullDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_not_null.down.sql", size: 50, mode: os.FileMode(420), modTime: time.Unix(1529711024, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __4_not_nullUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x72\x75\xf7\xf4\xb3\xe6\x0a\x0d\x70\x71\x0c\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x08\x76\x0d\x51\xc8\x4b\xcc\x4d\x55\xb0\x55\x50\x57\x57\x08\xf7\x70\x0d\x72\x85\xf0\x3d\x83\x15\xfc\x42\x7d\x7c\xac\xb9\x1c\x7d\x42\x5c\x83\x14\x42\x1c\x9d\x7c\x60\x7a\x20\x22\xce\xfe\x3e\xa1\xbe\x7e\x10\xc5\x20\x53\xfc\xfc\x43\xc0\x3a\x74\x70\xc8\xbb\xb8\xba\x39\x86\xfa\x84\x28\xa8\xab\x5b\x73\x39\xfb\xfb\xfa\x7a\x86\x58\x03\x02\x00\x00\xff\xff\x51\xc4\xcf\x47\x91\x00\x00\x00")

func _4_not_nullUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__4_not_nullUpSql,
		"4_not_null.up.sql",
	)
}

func _4_not_nullUpSql() (*asset, error) {
	bytes, err := _4_not_nullUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4_not_null.up.sql", size: 145, mode: os.FileMode(420), modTime: time.Unix(1529711024, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_bootstrapDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\xca\xcf\x2f\x29\x2e\x29\x4a\x2c\xb0\x06\x04\x00\x00\xff\xff\xf2\x59\xf5\x1a\x15\x00\x00\x00")

func _5_bootstrapDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_bootstrapDownSql,
		"5_bootstrap.down.sql",
	)
}

func _5_bootstrapDownSql() (*asset, error) {
	bytes, err := _5_bootstrapDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_bootstrap.down.sql", size: 21, mode: os.FileMode(420), modTime: time.Unix(1529711024, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __5_bootstrapUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcb\x31\x0e\xc2\x30\x0c\x05\xd0\x19\x9f\xe2\x8f\xed\x19\x32\x39\xc5\x45\x91\x5c\x5b\x6a\x1c\xf6\x30\x57\x2a\x82\xaa\xe7\x47\xb0\xb0\xbf\x97\xe5\x56\x2c\x11\x4d\xab\x70\x08\x82\xb3\x0a\x1e\xfb\x7e\xbc\x8f\x57\x7f\x0e\x74\x39\xfb\x86\xec\xae\xc2\x06\xf3\x80\x35\x55\x5c\x65\xe6\xa6\x81\x99\xb5\x0a\x8d\x89\xa8\x58\x95\x35\x50\x2c\xfc\xdf\x31\x9c\x7d\x1b\x71\x67\x6d\x52\x31\xfc\xf4\x17\x4f\xbe\x2c\x25\xd2\x27\x00\x00\xff\xff\xbd\x0c\x52\x7a\x7c\x00\x00\x00")

func _5_bootstrapUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__5_bootstrapUpSql,
		"5_bootstrap.up.sql",
	)
}

func _5_bootstrapUpSql() (*asset, error) {
	bytes, err := _5_bootstrapUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "5_bootstrap.up.sql", size: 124, mode: os.FileMode(420), modTime: time.Unix(1529711024, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_add_gen_columnDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x28\x48\x2c\x2e\x2e\xcf\x2f\x4a\x89\x4f\x4f\xcd\xb3\x06\x04\x00\x00\xff\xff\xf7\x09\xd5\xe9\x2b\x00\x00\x00")

func _6_add_gen_columnDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_add_gen_columnDownSql,
		"6_add_gen_column.down.sql",
	)
}

func _6_add_gen_columnDownSql() (*asset, error) {
	bytes, err := _6_add_gen_columnDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_add_gen_column.down.sql", size: 43, mode: os.FileMode(420), modTime: time.Unix(1529711024, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __6_add_gen_columnUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x31\x0a\x80\x30\x0c\x05\xd0\xab\xfc\x23\xb8\x3b\x45\x1b\x45\x88\x29\x94\x64\x16\xc1\xe2\xa6\xd2\x20\x5e\xdf\x47\x62\x5c\x60\x34\x08\xe3\x8d\xda\x02\x94\x12\xc6\x2c\xbe\x2a\x9e\x3d\xe2\xbb\xdb\xb1\x9d\xf5\xc2\xa2\xc6\x33\x17\x68\x36\xa8\x8b\x20\xf1\x44\x2e\x86\xae\xff\x03\x00\x00\xff\xff\x36\x26\x6d\xf2\x45\x00\x00\x00")

func _6_add_gen_columnUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__6_add_gen_columnUpSql,
		"6_add_gen_column.up.sql",
	)
}

func _6_add_gen_columnUpSql() (*asset, error) {
	bytes, err := _6_add_gen_columnUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "6_add_gen_column.up.sql", size: 69, mode: os.FileMode(420), modTime: time.Unix(1529711024, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_add_ip_columnDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xc9\x4f\x57\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\x48\x4c\x49\x29\xb2\xe6\x02\x04\x00\x00\xff\xff\x85\x4a\x91\x9c\x22\x00\x00\x00")

func _7_add_ip_columnDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_add_ip_columnDownSql,
		"7_add_ip_column.down.sql",
	)
}

func _7_add_ip_columnDownSql() (*asset, error) {
	bytes, err := _7_add_ip_columnDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_add_ip_column.down.sql", size: 34, mode: os.FileMode(420), modTime: time.Unix(1530306711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __7_add_ip_columnUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xc9\x4f\x57\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\x4c\x49\x29\x52\x08\x73\x0c\x72\xf6\x70\x0c\xd2\x30\x33\xd1\xb4\x06\x04\x00\x00\xff\xff\x61\xf7\x7c\xff\x2c\x00\x00\x00")

func _7_add_ip_columnUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__7_add_ip_columnUpSql,
		"7_add_ip_column.up.sql",
	)
}

func _7_add_ip_columnUpSql() (*asset, error) {
	bytes, err := _7_add_ip_columnUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "7_add_ip_column.up.sql", size: 44, mode: os.FileMode(420), modTime: time.Unix(1530306711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_add_user_addr_columnsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\xe6\xe2\x74\x09\xf2\x0f\x50\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x49\x2c\x2e\x89\xcf\xc9\x4f\xcf\xcc\x8b\x4f\x4c\x49\x29\xd2\xc1\x29\x5b\x52\x8c\x4d\xae\x28\x35\xad\x28\xb5\x38\x03\xa7\x5e\x98\x7c\x49\xb1\x35\x17\x20\x00\x00\xff\xff\xb1\xe2\xea\x62\x8a\x00\x00\x00")

func _8_add_user_addr_columnsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_add_user_addr_columnsDownSql,
		"8_add_user_addr_columns.down.sql",
	)
}

func _8_add_user_addr_columnsDownSql() (*asset, error) {
	bytes, err := _8_add_user_addr_columnsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_add_user_addr_columns.down.sql", size: 138, mode: os.FileMode(420), modTime: time.Unix(1530306711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __8_add_user_addr_columnsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x2a\xe6\xe2\x74\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xc9\x4f\xcf\xcc\x8b\x4f\x4c\x49\x29\x52\x08\x73\x0c\x72\xf6\x70\x0c\xd2\x30\x33\xd1\x54\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\x51\x70\x71\x75\x73\x0c\xf5\x09\x51\x50\x57\xd7\xc1\xa2\xaf\xa4\x58\x21\xc4\xd3\xd7\x35\x38\xc4\xd1\x37\x40\x21\xdc\x33\xc4\x03\xcc\x55\x88\xf2\xf7\x73\xc5\x62\x44\x6a\x41\x7e\x72\x06\x9a\x39\x45\xa9\x69\x45\xa9\xc5\x19\x64\xb8\x00\xa6\x93\x1c\x37\x58\x73\x01\x02\x00\x00\xff\xff\x07\xaf\xae\x99\x16\x01\x00\x00")

func _8_add_user_addr_columnsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__8_add_user_addr_columnsUpSql,
		"8_add_user_addr_columns.up.sql",
	)
}

func _8_add_user_addr_columnsUpSql() (*asset, error) {
	bytes, err := _8_add_user_addr_columnsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "8_add_user_addr_columns.up.sql", size: 278, mode: os.FileMode(420), modTime: time.Unix(1530306711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_add_log_columnsDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcb\x4d\x0a\xc2\x30\x10\xc5\xf1\x75\xe7\x14\x43\xd7\xf5\x04\x59\xb5\x35\x48\x21\x99\x48\x4d\xc1\x9d\x14\x26\x84\x80\x5a\xc9\x87\xe7\x17\xaa\x1b\x15\xba\x7c\x7f\x7e\xaf\x93\x87\x81\x04\x40\xab\xac\x1c\xd1\xb6\x9d\x92\x78\x5d\x3c\x54\xfb\xd1\x1c\xb1\x37\x6a\xd2\x84\x81\x9b\xef\x70\x4b\xbe\x81\xea\xfd\xf9\x24\xf7\x74\xf7\x8c\x2b\x22\x63\x91\x26\xa5\x7e\xc9\xcc\x1c\xb7\x45\x49\x2e\x5e\x02\x6f\xa3\x3c\x47\xef\xf2\x1f\x13\x00\xeb\x96\x67\x2b\xe9\x34\x18\xc2\xba\x94\xc0\xbb\x25\xa5\x47\x2d\x00\x7a\xa3\xf5\x60\xc5\x2b\x00\x00\xff\xff\x73\xb6\x3d\x95\xf1\x00\x00\x00")

func _9_add_log_columnsDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_add_log_columnsDownSql,
		"9_add_log_columns.down.sql",
	)
}

func _9_add_log_columnsDownSql() (*asset, error) {
	bytes, err := _9_add_log_columnsDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_add_log_columns.down.sql", size: 241, mode: os.FileMode(420), modTime: time.Unix(1530306711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __9_add_log_columnsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xcd\x6e\x82\x40\x14\x85\xd7\x9d\xa7\x38\x71\xa3\x26\x76\xd7\x1d\x71\x31\xca\xb5\x9d\x74\x18\x0c\xdc\x49\x71\x45\x48\x98\x10\x12\x0a\x0d\x3f\x3e\x7f\x03\xb5\xda\x1a\x75\x39\x73\xbf\xef\x64\xce\x9d\x0d\xbd\x2a\xe3\x09\xb1\x8d\x48\x32\x81\x12\x26\x13\xab\xd0\x40\xed\x60\x42\x06\x25\x2a\xe6\x18\xb3\x61\x28\xf3\xe7\xa6\xeb\xbe\x66\x9e\x10\x52\x33\x45\x60\xb9\xd1\x84\xaa\x29\xc4\x93\xf4\x7d\x6c\x43\x6d\x03\x83\x32\x87\xb5\xca\xc7\x3e\x52\x81\x8c\x0e\x78\xa7\x03\x7c\xda\x49\xab\x19\x63\x48\x5a\xb8\xda\xb5\x59\xef\xd2\xe3\xcb\x62\xb9\xfa\xe7\x7e\x76\x05\x98\x12\xf6\x84\xb0\x7b\x7f\x7c\x4f\xd5\x14\x88\x89\x31\x74\xae\x4d\xcb\x1c\xeb\x9f\x8c\xba\xac\x16\x4b\x7c\xbc\x51\x44\xe7\x91\x8a\x61\xac\xd6\xde\xb5\xda\x67\x6d\xe1\xfa\x3b\xf2\x65\x78\x4f\xcf\xf2\xbc\xc5\x1a\xf3\xf9\xc9\x98\xce\x67\xf8\xc6\x2a\xa6\x8b\x53\x21\x77\x74\x75\x3f\xc5\x8c\xbb\x1c\x95\xd5\x15\x31\xc5\x3d\x02\x7e\xeb\x3d\x62\x2e\x2d\xfe\x52\xe3\xaf\x86\x41\xa0\xd8\x13\xdf\x01\x00\x00\xff\xff\xb3\x47\x29\x12\xe6\x01\x00\x00")

func _9_add_log_columnsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__9_add_log_columnsUpSql,
		"9_add_log_columns.up.sql",
	)
}

func _9_add_log_columnsUpSql() (*asset, error) {
	bytes, err := _9_add_log_columnsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "9_add_log_columns.up.sql", size: 486, mode: os.FileMode(420), modTime: time.Unix(1530306711, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"10_add_email_gen_column.down.sql": _10_add_email_gen_columnDownSql,
	"10_add_email_gen_column.up.sql": _10_add_email_gen_columnUpSql,
	"11_add_tenants_table.down.sql": _11_add_tenants_tableDownSql,
	"11_add_tenants_table.up.sql": _11_add_tenants_tableUpSql,
	"12_role_per_tenant.down.sql": _12_role_per_tenantDownSql,
	"12_role_per_tenant.up.sql": _12_role_per_tenantUpSql,
	"13_ip_whitelist.down.sql": _13_ip_whitelistDownSql,
	"13_ip_whitelist.up.sql": _13_ip_whitelistUpSql,
	"14_roles_ref.down.sql": _14_roles_refDownSql,
	"14_roles_ref.up.sql": _14_roles_refUpSql,
	"15_role_membership_ref.down.sql": _15_role_membership_refDownSql,
	"15_role_membership_ref.up.sql": _15_role_membership_refUpSql,
	"16_user_id_default.down.sql": _16_user_id_defaultDownSql,
	"16_user_id_default.up.sql": _16_user_id_defaultUpSql,
	"17_service_account_keys.down.sql": _17_service_account_keysDownSql,
	"17_service_account_keys.up.sql": _17_service_account_keysUpSql,
	"18_service_constraints.down.sql": _18_service_constraintsDownSql,
	"18_service_constraints.up.sql": _18_service_constraintsUpSql,
	"19_update_log_table.down.sql": _19_update_log_tableDownSql,
	"19_update_log_table.up.sql": _19_update_log_tableUpSql,
	"1_add_users_table.down.sql": _1_add_users_tableDownSql,
	"1_add_users_table.up.sql": _1_add_users_tableUpSql,
	"20_service_accounts_ip_validation.down.sql": _20_service_accounts_ip_validationDownSql,
	"20_service_accounts_ip_validation.up.sql": _20_service_accounts_ip_validationUpSql,
	"2_add_roles_table.down.sql": _2_add_roles_tableDownSql,
	"2_add_roles_table.up.sql": _2_add_roles_tableUpSql,
	"3_add_log_table.down.sql": _3_add_log_tableDownSql,
	"3_add_log_table.up.sql": _3_add_log_tableUpSql,
	"4_not_null.down.sql": _4_not_nullDownSql,
	"4_not_null.up.sql": _4_not_nullUpSql,
	"5_bootstrap.down.sql": _5_bootstrapDownSql,
	"5_bootstrap.up.sql": _5_bootstrapUpSql,
	"6_add_gen_column.down.sql": _6_add_gen_columnDownSql,
	"6_add_gen_column.up.sql": _6_add_gen_columnUpSql,
	"7_add_ip_column.down.sql": _7_add_ip_columnDownSql,
	"7_add_ip_column.up.sql": _7_add_ip_columnUpSql,
	"8_add_user_addr_columns.down.sql": _8_add_user_addr_columnsDownSql,
	"8_add_user_addr_columns.up.sql": _8_add_user_addr_columnsUpSql,
	"9_add_log_columns.down.sql": _9_add_log_columnsDownSql,
	"9_add_log_columns.up.sql": _9_add_log_columnsUpSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"10_add_email_gen_column.down.sql": &bintree{_10_add_email_gen_columnDownSql, map[string]*bintree{}},
	"10_add_email_gen_column.up.sql": &bintree{_10_add_email_gen_columnUpSql, map[string]*bintree{}},
	"11_add_tenants_table.down.sql": &bintree{_11_add_tenants_tableDownSql, map[string]*bintree{}},
	"11_add_tenants_table.up.sql": &bintree{_11_add_tenants_tableUpSql, map[string]*bintree{}},
	"12_role_per_tenant.down.sql": &bintree{_12_role_per_tenantDownSql, map[string]*bintree{}},
	"12_role_per_tenant.up.sql": &bintree{_12_role_per_tenantUpSql, map[string]*bintree{}},
	"13_ip_whitelist.down.sql": &bintree{_13_ip_whitelistDownSql, map[string]*bintree{}},
	"13_ip_whitelist.up.sql": &bintree{_13_ip_whitelistUpSql, map[string]*bintree{}},
	"14_roles_ref.down.sql": &bintree{_14_roles_refDownSql, map[string]*bintree{}},
	"14_roles_ref.up.sql": &bintree{_14_roles_refUpSql, map[string]*bintree{}},
	"15_role_membership_ref.down.sql": &bintree{_15_role_membership_refDownSql, map[string]*bintree{}},
	"15_role_membership_ref.up.sql": &bintree{_15_role_membership_refUpSql, map[string]*bintree{}},
	"16_user_id_default.down.sql": &bintree{_16_user_id_defaultDownSql, map[string]*bintree{}},
	"16_user_id_default.up.sql": &bintree{_16_user_id_defaultUpSql, map[string]*bintree{}},
	"17_service_account_keys.down.sql": &bintree{_17_service_account_keysDownSql, map[string]*bintree{}},
	"17_service_account_keys.up.sql": &bintree{_17_service_account_keysUpSql, map[string]*bintree{}},
	"18_service_constraints.down.sql": &bintree{_18_service_constraintsDownSql, map[string]*bintree{}},
	"18_service_constraints.up.sql": &bintree{_18_service_constraintsUpSql, map[string]*bintree{}},
	"19_update_log_table.down.sql": &bintree{_19_update_log_tableDownSql, map[string]*bintree{}},
	"19_update_log_table.up.sql": &bintree{_19_update_log_tableUpSql, map[string]*bintree{}},
	"1_add_users_table.down.sql": &bintree{_1_add_users_tableDownSql, map[string]*bintree{}},
	"1_add_users_table.up.sql": &bintree{_1_add_users_tableUpSql, map[string]*bintree{}},
	"20_service_accounts_ip_validation.down.sql": &bintree{_20_service_accounts_ip_validationDownSql, map[string]*bintree{}},
	"20_service_accounts_ip_validation.up.sql": &bintree{_20_service_accounts_ip_validationUpSql, map[string]*bintree{}},
	"2_add_roles_table.down.sql": &bintree{_2_add_roles_tableDownSql, map[string]*bintree{}},
	"2_add_roles_table.up.sql": &bintree{_2_add_roles_tableUpSql, map[string]*bintree{}},
	"3_add_log_table.down.sql": &bintree{_3_add_log_tableDownSql, map[string]*bintree{}},
	"3_add_log_table.up.sql": &bintree{_3_add_log_tableUpSql, map[string]*bintree{}},
	"4_not_null.down.sql": &bintree{_4_not_nullDownSql, map[string]*bintree{}},
	"4_not_null.up.sql": &bintree{_4_not_nullUpSql, map[string]*bintree{}},
	"5_bootstrap.down.sql": &bintree{_5_bootstrapDownSql, map[string]*bintree{}},
	"5_bootstrap.up.sql": &bintree{_5_bootstrapUpSql, map[string]*bintree{}},
	"6_add_gen_column.down.sql": &bintree{_6_add_gen_columnDownSql, map[string]*bintree{}},
	"6_add_gen_column.up.sql": &bintree{_6_add_gen_columnUpSql, map[string]*bintree{}},
	"7_add_ip_column.down.sql": &bintree{_7_add_ip_columnDownSql, map[string]*bintree{}},
	"7_add_ip_column.up.sql": &bintree{_7_add_ip_columnUpSql, map[string]*bintree{}},
	"8_add_user_addr_columns.down.sql": &bintree{_8_add_user_addr_columnsDownSql, map[string]*bintree{}},
	"8_add_user_addr_columns.up.sql": &bintree{_8_add_user_addr_columnsUpSql, map[string]*bintree{}},
	"9_add_log_columns.down.sql": &bintree{_9_add_log_columnsDownSql, map[string]*bintree{}},
	"9_add_log_columns.up.sql": &bintree{_9_add_log_columnsUpSql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

