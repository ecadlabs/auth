admin:
  # access_log_path: /tmp/admin_access.log
  access_log_path: /dev/stdout
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
  - name: listener_http
    # access_log_path: /dev/stdout
    address:
      socket_address: { address: 0.0.0.0, port_value: 10000 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          access_log:
          - name: envoy.file_access_log
            config:
              path: "/dev/stdout"
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              #Add routes here, don't forget to update the `envoy_dev.yaml`
              #conterpart!
              routes:
              - match: { prefix: "/api/v1/login" }
                route: { host_rewrite: auth, cluster: service_auth, prefix_rewrite: "/login"  }
              - match: { prefix: "/api/v1/users" }
                route: { host_rewrite: auth, cluster: service_auth, prefix_rewrite: "/users"  }
              - match: { prefix: "/api/v1/password_reset" }
                route: { host_rewrite: auth, cluster: service_auth, prefix_rewrite: "/password_reset"  }
              - match: { prefix: "/api/v1/request_password_reset" }
                route: { host_rewrite: auth, cluster: service_auth, prefix_rewrite: "/request_password_reset"  }
              - match: { prefix: "/api/v1/refresh" }
                route: { host_rewrite: auth, cluster: service_auth, prefix_rewrite: "/refresh"  }
              - match: { prefix: "/apidocs" }
                route: { host_rewrite: apidocs, cluster: service_apidocs, prefix_rewrite: "/"  }
              - match: { prefix: "/" }
                route: {cluster: service_webapp, use_websocket: "true" }
          http_filters:
          - name: envoy.router
  #Add services here, don't forget to update the `envoy_dev.yaml`
  #conterpart!
  clusters:
    - name: service_auth
      connect_timeout: 5.25s
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [{ socket_address: { address: auth, port_value: 8000 }}]
    - name: service_webapp
      connect_timeout: 15.25s
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [{ socket_address: { address: webapp, port_value: 4200 }}]
    - name: service_apidocs
      connect_timeout: 15.25s
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      hosts: [{ socket_address: { address: apidocs, port_value: 80 }}]

