version: 2

defaults: &defaults
    working_directory: ~/auth
    docker:
      - image: circleci/node:10-browsers-legacy

jobs:
  daemon-test:
    docker:
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.8-jessie
      # CircleCI PostgreSQL images available at: https://hub.docker.com/r/circleci/postgres/
      - image: postgres:latest
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: userstest
    working_directory: /go/src/github.com/ecadlabs/auth
    steps:
      - checkout
      - run:
          name: Integration test
          command: cd intergationtesting &&  go test --db "postgres://circleci@localhost/userstest?sslmode=disable"
  webapp-test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "webapp/package-lock.json" }}
      - run:
          name: Install npm dependencies
          command: cd webapp && npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "webapp/package-lock.json" }}
          paths:
            - ./webapp/node_modules
      - run:
          name: lint
          command: cd webapp && npm run lint
      - run:
          name: build
          command: cd webapp && npm run build
      - run:
          name: test
          command: cd webapp && npm run test-ci
      - persist_to_workspace:
          root: ~/auth
          paths: .
  webapp-deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/auth
      - run:
          name: Build Prod
          command: cd webapp && npm run build-prod
      - run:
          name: Authenticate with registry
          command: cd webapp/dist/ecad-angular-auth && echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > .npmrc
      - run:
          name: Publish package
          command: cd webapp/dist/ecad-angular-auth && npm publish
            
workflows:
  version: 2
  test:
    jobs:
      - daemon-test
      - webapp-test
  test-deploy:
    jobs:
      - webapp-test:
          filters:
            tags:
              only: /^v.*/
      - webapp-deploy:
          requires:
            - webapp-test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/