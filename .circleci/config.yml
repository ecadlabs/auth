version: 2

defaults: &defaults
  working_directory: ~/auth
  docker:
    - image: circleci/node:10-browsers-legacy

jobs:
  daemon-lint:
    docker:
      - image: circleci/golang:1.10.4
    working_directory: /go/src/github.com/ecadlabs/auth
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: wget -O - -q https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s vX.Y.Z
      - run:
          name: Lint
          command: golangci-lint run
  daemon-test:
    docker:
      - image: circleci/golang:1.10.4
      - image: postgres:latest
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: userstest
    working_directory: /go/src/github.com/ecadlabs/auth
    steps:
      - checkout
      - run:
          name: Integration test
          command: cd intergationtesting && go test --db "postgres://circleci@localhost/userstest?sslmode=disable"
  webapp-test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "webapp/package-lock.json" }}
      - run:
          name: Install npm dependencies
          command: cd webapp && npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "webapp/package-lock.json" }}
          paths:
            - ./webapp/node_modules
      - run:
          name: lint
          command: cd webapp && npm run lint
      - run:
          name: build
          command: cd webapp && npm run build
      - run:
          name: test
          command: cd webapp && npm run test-ci
      - persist_to_workspace:
          root: ~/auth
          paths: .
  daemon-publish:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -t ecadlabs/auth:$CIRCLE_TAG .
      - run:
          name: Login to Docker Hub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Publish image to Docker Hub
          command: docker push ecadlabs/auth:$CIRCLE_TAG
      - run:
          name: Add latest tag to docker image
          command: docker tag ecadlabs/auth:$CIRCLE_TAG ecadlabs/auth:latest && docker push ecadlabs/auth:latest
  webapp-publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/auth
      - run:
          name: Build Prod
          command: cd webapp && npm run build-prod
      - run:
          name: Authenticate with registry
          command: cd webapp/dist/ecad-angular-auth && echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > .npmrc
      - run:
          name: Publish package
          command: cd webapp/dist/ecad-angular-auth && npm publish

workflows:
  version: 2
  lint:
    jobs:
      - daemon-lint
  test:
    jobs:
      - daemon-test
      - webapp-test
  daemon-publish:
    jobs:
      - daemon-test:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - daemon-publish:
          requires:
            - daemon-test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
  webapp-publish:
    jobs:
      - webapp-test:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - webapp-publish:
          requires:
            - webapp-test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
